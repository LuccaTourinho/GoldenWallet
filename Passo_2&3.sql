-- Passo 2 

-- Criação das tabelas sem chaves estrangeiras

-- Tabela que armeza o usuario
CREATE TABLE TB_USUARIO (
  ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY COMMENT "ID do usuario",
  NOME_USUARIO VARCHAR(60) NOT NULL COMMENT "Nome do Usuario",
  SENHA VARCHAR(15) NOT NULL COMMENT "Senha do usuario"
  ,UNIQUE(NOME_USUARIO)
  ,UNIQUE(SENHA)
);

-- Tabela que armazena os países
CREATE TABLE TB_PAIS(
    ID_PAIS INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do país",
    NOME_PAIS VARCHAR(40) NOT NULL COMMENT "Nome do país",
    SIGLA VARCHAR(5) NOT NULL COMMENT "Sigla do país"
    ,UNIQUE(NOME_PAIS)
);

-- Tabela que armazena os bancos
CREATE TABLE TB_BANCO(
    ID_BANCO INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do banco",
    NOME_BANCO VARCHAR(50) NOT NULL COMMENT "Nome do banco",
    CODIGO_BANCO VARCHAR(10) NOT NULL COMMENT "Código do banco",
    SIGLA_BANCO VARCHAR(5) NOT NULL  COMMENT "Sigla do banco"
    ,UNIQUE(CODIGO_BANCO)
);

-- Tabela que armazena as categorias de receita
CREATE TABLE TB_CAT_RECEITA(
	ID_CAT_RECEITA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID da categoria receita",
	CATEGORIA_RECEITA VARCHAR(50) NOT NULL COMMENT "Categoria de receita",
	SUB_CATEGORIA VARCHAR(50) NOT NULL COMMENT "Subcategoria de receita"
);

-- Tabela que armazena as categorias de despesa
CREATE TABLE TB_CAT_DESPESA(
	ID_CAT_DESPESA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID da categoria da despesa",
	CATEGORIA_DESPESA VARCHAR(50) NOT NULL COMMENT "Categoria de despesa",
	SUB_CATEGORIA_DESPESA VARCHAR(50) NOT NULL COMMENT "Subcategoria de despesa"
);

-- Tabela que armazena os planejamentos
CREATE TABLE TB_PLANEJAMENTO(
    ID_PLANEJAMENTO INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do planejamento",
    NOME_PLANEJAMENTO VARCHAR(50) NOT NULL COMMENT "Nome do planejamento",
    VALOR_TOTAL_PLANEJAMENTO DECIMAL(10,2) NOT NULL COMMENT "Valor total do planejamento",
    DATA_INICIO_PLANEJAMENTO DATE NOT NULL COMMENT "Data de início do planejamento",
    DATE_TERMINO_PLANEJAMENTO DATE NOT NULL COMMENT "Data de término do planejamento",
    VALOR_INICIAL_PLANEJAMENTO DECIMAL(10,2) NOT NULL COMMENT  "Valor inicial do planejamento"
);

-- Passo 3

-- Criação das outras tabelas

-- Tabela que armazena as moedas
CREATE TABLE TB_MOEDA (
    ID_MOEDA INT AUTO_INCREMENT PRIMARY KEY COMMENT "ID da moeda",
    ID_MOEDA_PAIS_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_PAIS",
    SIGLA VARCHAR(5) NOT NULL COMMENT "Sigla da moeda",
    SIMBOLO VARCHAR(5) NOT NULL COMMENT "Símbolo da moeda",
    FOREIGN KEY (ID_MOEDA_PAIS_FK) REFERENCES TB_PAIS (ID_PAIS) ON DELETE CASCADE,
    INDEX idx_ID_MOEDA_PAIS_FK (ID_MOEDA_PAIS_FK) -- Índice da coluna ID_MOEDA_PAIS_FK
    ,UNIQUE(ID_MOEDA_PAIS_FK)
);

-- Tabela que armazena as contas
CREATE TABLE TB_CONTA(
    ID_CONTA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID da conta",
    NOME_CONTA VARCHAR(50) NOT NULL COMMENT "Nome da conta",
    VALOR_INICIAL_CONTA DECIMAL(10,2) NOT NULL COMMENT "Valor inicial da conta",
    ID_CONTA_BANCO_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_BANCO",
    ID_CONTA_MOEDA_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_MOEDA",
    ID_CONTA_USUARIO_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_USUARIO",
    FOREIGN KEY (ID_CONTA_BANCO_FK) REFERENCES TB_BANCO (ID_BANCO) ON DELETE CASCADE,
    FOREIGN KEY (ID_CONTA_MOEDA_FK) REFERENCES TB_MOEDA (ID_MOEDA) ON DELETE CASCADE,
    FOREIGN KEY (ID_CONTA_USUARIO_FK) REFERENCES TB_USUARIO (ID_USUARIO) ON DELETE CASCADE, 
    INDEX idx_ID_CONTA_USUARIO_FK (ID_CONTA_USUARIO_FK) -- Índice da coluna ID_CONTA_USUARIO_FK
    ,UNIQUE(NOME_CONTA)
);

CREATE TABLE TB_LANCAMENTO(
    ID_LANCAMENTO INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do lançamento",
    VALOR_LANCAMENTO DECIMAL(10,2) NOT NULL COMMENT "Valor do lançamento",
    DATA_LANCAMENTO DATE NOT NULL COMMENT "Data do lançamento",
    DESCRICAO_LANCAMENTO TEXT NOT NULL COMMENT "Descrição do lançamento",
    STATUS_LANCAMENTO BOOLEAN NOT NULL COMMENT "Status do lançamento",
    ANEXO_LANCAMENTO BLOB NULL COMMENT "Anexo do lançamento",
    ID_LANC_CONTA_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_CONTA",
    FOREIGN KEY (ID_LANC_CONTA_FK) REFERENCES TB_CONTA (ID_CONTA) ON DELETE CASCADE,
    INDEX idx_ID_LANC_CONTA_FK (ID_LANC_CONTA_FK) -- Índice na coluna ID_LANC_CONTA_FK
);

-- Tabela que armazena os aportes em planejamentos
CREATE TABLE TB_APORTE_PLAN(
    ID_APORTE_PLAN INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do aporte do plano",
    ID_APOR_LANC_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_LANCAMENTO",
    ID_APOR_PLAN_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_PLANEJAMENTO",
    FOREIGN KEY (ID_APOR_LANC_FK) REFERENCES TB_LANCAMENTO (ID_LANCAMENTO) ON DELETE CASCADE,
    FOREIGN KEY (ID_APOR_PLAN_FK) REFERENCES TB_PLANEJAMENTO (ID_PLANEJAMENTO) ON DELETE CASCADE,
    INDEX idx_ID_APOR_LANC_FK (ID_APOR_LANC_FK) -- Índice na coluna ID_APORTE_LANCAMENTO_FK
);

-- Tabela que armazena as transferências
CREATE TABLE TB_TRANSFERENCIA(
	ID_TRANSFERENCIA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID de transferencia",
	ID_LANC_DESTINO_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_LANCAMENTO",
	ID_CONTA_DESTINO_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_CONTA",
	FOREIGN KEY (ID_LANC_DESTINO_FK) REFERENCES TB_LANCAMENTO (ID_LANCAMENTO) ON DELETE CASCADE,
	FOREIGN KEY (ID_CONTA_DESTINO_FK) REFERENCES TB_CONTA (ID_CONTA) ON DELETE CASCADE,
        INDEX idx_ID_LANC_DESTINO_FK (ID_LANC_DESTINO_FK) -- Índice na coluna ID_LANC_DESTINO_FK
);

-- Tabela que armazena as receitas
CREATE TABLE TB_RECEITA(
	ID_RECEITA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID da receita",
	ID_REC_LANC_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_LANCAMENTO",
	ID_REC_CAT_RECEITA_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_CAT_RECEITA",
	FOREIGN KEY (ID_REC_LANC_FK) REFERENCES TB_LANCAMENTO (ID_LANCAMENTO) ON DELETE CASCADE,
	FOREIGN KEY (ID_REC_CAT_RECEITA_FK) REFERENCES TB_CAT_RECEITA (ID_CAT_RECEITA) ON DELETE CASCADE,
        INDEX idx_ID_REC_LANC_FK (ID_REC_LANC_FK) -- Índice na coluna ID_REC_LANC_FK
);

-- Tabela que armazena as despesas
CREATE TABLE TB_DESPESA(
	ID_DESPESA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID da despesa",
	ID_DESP_LANC_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_LANCAMENTO",
	ID_CAT_DESPESA_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_CAT_DESPESA",
	FOREIGN KEY (ID_DESP_LANC_FK) REFERENCES TB_LANCAMENTO (ID_LANCAMENTO) ON DELETE CASCADE,
	FOREIGN KEY (ID_CAT_DESPESA_FK) REFERENCES TB_CAT_DESPESA (ID_CAT_DESPESA) ON DELETE CASCADE,
        INDEX idx_ID_DESP_LANC_FK (ID_DESP_LANC_FK) -- Índice na coluna ID_DESP_LANC_FK
);

-- Tabela que armazena os cartões de crédito
CREATE TABLE TB_CARTAO_CREDITO(
	ID_CARTAO_CREDITO INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do cartao de credito",
	NOME_CARTAO_CREDITO VARCHAR(20) NOT NULL COMMENT "Nome do cartão de crédito",
	DATA_VENCE_FATURA DATE NOT NULL COMMENT "Data de vencimento da fatura",
	LIMITE_NOMINAL DECIMAL(10,2) NOT NULL COMMENT "Limite nominal do cartão de crédito",
	LIMITE_EFETIVO DECIMAL(10,2) NOT NULL COMMENT "Limite efetivo do cartão de crédito",
	ID_CC_BANCO_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_BANCO",
	FOREIGN KEY (ID_CC_BANCO_FK) REFERENCES TB_BANCO (ID_BANCO) ON DELETE CASCADE,
        INDEX idx_ID_CC_BANCO_FK (ID_CC_BANCO_FK) -- Índice na coluna ID_CC_BANCO_FK
);

-- Tabela que relaciona os lançamentos com os cartões de crédito
CREATE TABLE TB_LANC_CARTAO_CREDITO(
    ID_LC_CRED INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID dos lancamentos de cartões de credito",
    ID_LC_LANC_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_LANCAMENTO",
	ID_LC_CARTAO_CREDITO_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_CARTAO_CREDITO",
	FOREIGN KEY (ID_LC_LANC_FK) REFERENCES TB_LANCAMENTO (ID_LANCAMENTO) ON DELETE CASCADE,
	FOREIGN KEY (ID_LC_CARTAO_CREDITO_FK) REFERENCES TB_CARTAO_CREDITO (ID_CARTAO_CREDITO) ON DELETE CASCADE,
    INDEX idx_ID_LC_LANC_FK (ID_LC_LANC_FK) -- Índice na coluna ID_LC_LANC_FK
);

-- Tabela que armazena as faturas dos cartões de crédito
CREATE TABLE TB_FATURA(
	ID_FATURA INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID da fatura",
	VALOR_TOTAL_FATURA DECIMAL(10,2) NOT NULL COMMENT "Valor total da fatura",
	VALOR_PRIMARIO DECIMAL(10,2) NOT NULL COMMENT "Valor primário da fatura",
	VALOR_SECUNDARIO DECIMAL(10,2) NOT NULL COMMENT "Valor secundário da fatura",
	PAGO_PRIMARIO DECIMAL(10,2) NOT NULL COMMENT "Valor pago do primário",
	PAGO_SECUNDARIO DECIMAL(10,2) NOT NULL COMMENT "Valor pago do secundário",
	DATE_VENCIMENTO_FATURA DATE NOT NULL COMMENT "Data de vencimento da fatura",
	ID_FT_LC_CRED_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_LANC_CARTAO_CREDITO",
	FOREIGN KEY (ID_FT_LC_CRED_FK) REFERENCES TB_LANC_CARTAO_CREDITO (ID_LC_CRED) ON DELETE CASCADE,
        INDEX idx_ID_FT_LC_CRED_FK (ID_FT_LC_CRED_FK) -- Índice na coluna ID_FT_LC_CRED_FK
);

-- Tabela que define limites de gastos para diferentes categorias de despesas. 
CREATE TABLE TB_LIMITES_GASTOS (
  ID_LG INT AUTO_INCREMENT PRIMARY KEY COMMENT "ID dos limites de gastos",
  ID_LG_CONTA_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_USUARIO",
  ID_LG_CAT_DESPESA_FK INT NOT NULL COMMENT "Chave estrangeira referenciando a tabela TB_CAT_DESPESA",
  LIMITE_MENSAL DECIMAL(10,2) NOT NULL COMMENT "Limite mensal com até 2 números decimais",
  FOREIGN KEY (ID_LG_CONTA_FK) REFERENCES TB_CONTA (ID_CONTA) ON DELETE CASCADE,
  FOREIGN KEY (ID_LG_CAT_DESPESA_FK) REFERENCES TB_CAT_DESPESA (ID_CAT_DESPESA) ON DELETE CASCADE,
  INDEX idx_ID_LG_CONTA_FK (ID_LG_CONTA_FK) -- Índice na coluna ID_LG_USUARIO_FK
);

-- Criação da tabela TB_LOG
CREATE TABLE TB_LOG (
  ID_LOG INT PRIMARY KEY AUTO_INCREMENT COMMENT "ID do log",
  ID_LOG_CONTA_FK INT COMMENT "Chave estrangeira do tabela",
  VALOR_ACIMA_DESPESA DECIMAL(10, 2) COMMENT "Quanto passou da despesa",
  DATA_LOG DATE COMMENT "Data de quando passou",
  FOREIGN KEY (ID_LOG_CONTA_FK) REFERENCES TB_CONTA(ID_CONTA) ON DELETE CASCADE,
  INDEX idx_ID_LOG_CONTA_FK (ID_LOG_CONTA_FK)
);
